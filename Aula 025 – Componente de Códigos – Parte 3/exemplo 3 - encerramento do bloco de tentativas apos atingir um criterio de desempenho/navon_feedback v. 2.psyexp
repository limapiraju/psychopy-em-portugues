<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.2">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': ''}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="False" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="norm" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[900, 600]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-1.000,-1.000,-1.000]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="navon" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <TextComponent name="fixation">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="fixation" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="1" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.0" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="+" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <ImageComponent name="target_stim">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$navon_stim" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="target_stim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$[xPos, yPos]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.2" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
      </ImageComponent>
      <ImageComponent name="mask_stim">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="constant" val="mask.png" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="mask_stim" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$[xPos, yPos]" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(1, 1)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="2.2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="resp">
        <Param name="allowedKeys" updates="constant" val="'s', 'h'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corr_resp_navon" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="2" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="begin">
      <TextComponent name="begin_msg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="begin_msg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Pressione [BARRA DE ESPAÇO] para continuar." valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.8" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="begin_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="begin_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="thanks">
      <TextComponent name="thanks_msg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="thanks_msg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Tarefa encerrada!&amp;#10;&amp;#10;Obrigado por sua participação!" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="block_feedback">
      <CodeComponent name="feedback">
        <Param name="Before Experiment" updates="constant" val="n_blocks = 3&amp;#10;criterio = 75" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="msg = &quot;Se essa mensagem apareceu de feedback, é porque deu ruim.&quot;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="trials.data[&quot;resp.corr&quot;];&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# https://www.psychopy.org/recipes/builderFeedback.html&amp;#10;&amp;#10;# n_corr = número de acertos&amp;#10;n_corr = trials.data['resp.corr'].sum()&amp;#10;&amp;#10;# mean_corr = média de acertos&amp;#10;mean_corr = trials.data['resp.corr'].mean() * 100&amp;#10;&amp;#10;# mean_rt = tempo de reação (RT) médio, em milissegundos&amp;#10;mean_rt = trials.data['resp.rt'].mean() * 1000&amp;#10;mean_rt = f&quot;{mean_rt:.2f}&quot;.replace(&quot;.&quot;, &quot;,&quot;)&amp;#10;&amp;#10;# se o participante acertou pelo menos 75% das tentativas&amp;#10;if mean_corr &gt;= criterio:&amp;#10;    mean_corr = f&quot;{mean_corr:.2f}&quot;.replace(&quot;.&quot;, &quot;,&quot;)&amp;#10;    msg = f&quot;Parabéns! Você acertou {n_corr:.0f} tentativas ({mean_corr}% de acertos).\n\nTempo de reação médio = {mean_rt} ms.\n\nPressione [BARRA DE ESPAÇO] para avançar.&quot;&amp;#10;    block_repetitions.finished = True&amp;#10;&amp;#10;# se o participante não atingiu o critério&amp;#10;elif block_repetitions.thisRepN &lt; (n_blocks - 1):&amp;#10;    mean_corr = f&quot;{mean_corr:.2f}&quot;.replace(&quot;.&quot;, &quot;,&quot;)&amp;#10;    msg = f&quot;Você acertou {n_corr:.0f} tentativas ({mean_corr}% de acertos).\n\nTempo de reação médio = {mean_rt} ms.\n\nVocê precisa acertar mais para avançar na tarefa.\n\nPressione [BARRA DE ESPAÇO] para continuar.&quot;&amp;#10;&amp;#10;# se o participante atingiu o número limite de blocos e falhou miseravelmente nele&amp;#10;else:&amp;#10;    mean_corr = f&quot;{mean_corr:.2f}&quot;.replace(&quot;.&quot;, &quot;,&quot;)&amp;#10;    msg = f&quot;Você acertou {n_corr:.0f} tentativas ({mean_corr}% de acertos).\n\nTempo de reação médio = {mean_rt} ms.\n\nSeu número de tentativas terminou.\n\nPressione [BARRA DE ESPAÇO] para continuar.&quot;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="feedback" valType="code"/>
      </CodeComponent>
      <TextComponent name="feedback_msg">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="feedback_msg" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="extendedStr"/>
        <Param name="units" updates="None" val="norm" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="1.8" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="feedback_resp">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="feedback_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="begin"/>
    <LoopInitiator loopType="TrialHandler" name="block_repetitions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="$n_blocks" valType="code"/>
      <Param name="name" updates="None" val="block_repetitions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('navon_stim', 'local_H_global_H.jpg'), ('local_letter', 'H'), ('global_letter', 'H'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', 0.4), ('yPos', 0.4), ('position', 'up_right')]), OrderedDict([('navon_stim', 'local_S_global_H.jpg'), ('local_letter', 'S'), ('global_letter', 'H'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', 0.4), ('yPos', 0.4), ('position', 'up_right')]), OrderedDict([('navon_stim', 'local_H_global_S.jpg'), ('local_letter', 'H'), ('global_letter', 'S'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', 0.4), ('yPos', 0.4), ('position', 'up_right')]), OrderedDict([('navon_stim', 'local_S_global_S.jpg'), ('local_letter', 'S'), ('global_letter', 'S'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', 0.4), ('yPos', 0.4), ('position', 'up_right')]), OrderedDict([('navon_stim', 'local_H_global_H.jpg'), ('local_letter', 'H'), ('global_letter', 'H'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', -0.4), ('yPos', 0.4), ('position', 'up_left')]), OrderedDict([('navon_stim', 'local_S_global_H.jpg'), ('local_letter', 'S'), ('global_letter', 'H'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', -0.4), ('yPos', 0.4), ('position', 'up_left')]), OrderedDict([('navon_stim', 'local_H_global_S.jpg'), ('local_letter', 'H'), ('global_letter', 'S'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', -0.4), ('yPos', 0.4), ('position', 'up_left')]), OrderedDict([('navon_stim', 'local_S_global_S.jpg'), ('local_letter', 'S'), ('global_letter', 'S'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', -0.4), ('yPos', 0.4), ('position', 'up_left')]), OrderedDict([('navon_stim', 'local_H_global_H.jpg'), ('local_letter', 'H'), ('global_letter', 'H'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', 0.4), ('yPos', -0.4), ('position', 'down_right')]), OrderedDict([('navon_stim', 'local_S_global_H.jpg'), ('local_letter', 'S'), ('global_letter', 'H'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', 0.4), ('yPos', -0.4), ('position', 'down_right')]), OrderedDict([('navon_stim', 'local_H_global_S.jpg'), ('local_letter', 'H'), ('global_letter', 'S'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', 0.4), ('yPos', -0.4), ('position', 'down_right')]), OrderedDict([('navon_stim', 'local_S_global_S.jpg'), ('local_letter', 'S'), ('global_letter', 'S'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', 0.4), ('yPos', -0.4), ('position', 'down_right')]), OrderedDict([('navon_stim', 'local_H_global_H.jpg'), ('local_letter', 'H'), ('global_letter', 'H'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', -0.4), ('yPos', -0.4), ('position', 'down_left')]), OrderedDict([('navon_stim', 'local_S_global_H.jpg'), ('local_letter', 'S'), ('global_letter', 'H'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', -0.4), ('yPos', -0.4), ('position', 'down_left')]), OrderedDict([('navon_stim', 'local_H_global_S.jpg'), ('local_letter', 'H'), ('global_letter', 'S'), ('navon_condition', 'incongruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 'h'), ('xPos', -0.4), ('yPos', -0.4), ('position', 'down_left')]), OrderedDict([('navon_stim', 'local_S_global_S.jpg'), ('local_letter', 'S'), ('global_letter', 'S'), ('navon_condition', 'congruent'), ('trial_type', 'LOCAL'), ('corr_resp_navon', 's'), ('xPos', -0.4), ('yPos', -0.4), ('position', 'down_left')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="navon_file.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="block_feedback"/>
    <LoopTerminator name="block_repetitions"/>
    <Routine name="thanks"/>
  </Flow>
</PsychoPy2experiment>
