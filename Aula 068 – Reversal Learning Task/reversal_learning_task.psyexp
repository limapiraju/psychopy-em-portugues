<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.1.5">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="norm" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[900, 600]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="reversal_learning_task" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="warning" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="0" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="def gerar_reforcos(n_trials=150):&amp;#10;    &quot;&quot;&quot;&amp;#10;    Gera reforços com proporção de 0.75 (3 em 4 tentativas recebem reforço positivo)&amp;#10;    &quot;&quot;&quot;&amp;#10;    reforcos = []&amp;#10;    n_blocos = n_trials // 4&amp;#10;    sobra = n_trials % 4&amp;#10;&amp;#10;    for _ in range(n_blocos):&amp;#10;        bloco = [True, True, True, False]&amp;#10;        np.random.shuffle(bloco)&amp;#10;        reforcos.extend(bloco)&amp;#10;&amp;#10;    if sobra &gt; 0:&amp;#10;        resto_pool = [True, True, False, False]&amp;#10;        np.random.shuffle(resto_pool)&amp;#10;        reforcos.extend(resto_pool[:sobra])&amp;#10;&amp;#10;    return reforcos&amp;#10;&amp;#10;reforcos = gerar_reforcos()&amp;#10;print(len(reforcos))&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# inicializa variáveis&amp;#10;x_pos = score = 0&amp;#10;point_msg = &quot;&quot;&amp;#10;&amp;#10;# define alvo inicial&amp;#10;if random() &gt; 0.5:&amp;#10;    target = r&quot;images\fractal1.jpg&quot;&amp;#10;else:&amp;#10;    target = r&quot;images\fractal2.jpg&quot;&amp;#10;&amp;#10;&amp;#10;def switching(length = 150, n_switches = 9, intervalo_min = 12, intervalo_max = 18):&amp;#10;    assert intervalo_min * n_switches &lt;= length &lt;= intervalo_max * n_switches, &quot;Impossível encaixar os switches.&quot;&amp;#10;&amp;#10;    while True:&amp;#10;        # Amostra os primeiros n_switches - 1 intervalos&amp;#10;        primeiros = np.random.randint(intervalo_min, intervalo_max + 1, size=n_switches - 1)&amp;#10;        soma_parcial = primeiros.sum()&amp;#10;        ultimo = length - soma_parcial&amp;#10;&amp;#10;        # Verifica se o último intervalo cabe&amp;#10;        if intervalo_min &lt;= ultimo &lt;= intervalo_max:&amp;#10;            intervalos = list(primeiros) + [ultimo]&amp;#10;            break&amp;#10;&amp;#10;    cumulativos = np.cumsum(intervalos)&amp;#10;    switch = [False] * length&amp;#10;    for i in cumulativos:&amp;#10;        switch[i - 1] = True&amp;#10;&amp;#10;    return switch&amp;#10;&amp;#10;# monitora mudanças&amp;#10;switches = switching()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# corr_target → Resposta &quot;correta&quot; teórica&amp;#10;# imagem_reforcada → Imagem que será reforçada neste trial&amp;#10;# corr → Resposta correta do ponto de vista comportamental&amp;#10;&amp;#10;opa = 0&amp;#10;&amp;#10;# monitora mudança de alvo&amp;#10;if switches[trials.thisN]:&amp;#10;    target = r&quot;images\fractal2.jpg&quot; if target == r&quot;images\fractal1.jpg&quot; else r&quot;images\fractal1.jpg&quot;&amp;#10;&amp;#10;# define posição dos estímulos (randomização esquerda/direita)&amp;#10;if random() &gt; 0.5:&amp;#10;    fractal_left, fractal_right = r&quot;images\fractal1.jpg&quot;, r&quot;images\fractal2.jpg&quot;&amp;#10;else:&amp;#10;    fractal_left, fractal_right = r&quot;images\fractal2.jpg&quot;, r&quot;images\fractal1.jpg&quot;&amp;#10;&amp;#10;# define reforço deste trial&amp;#10;reforco_aplicado = reforcos[trials.thisN]&amp;#10;&amp;#10;# define qual imagem está sendo reforçada&amp;#10;if reforco_aplicado:&amp;#10;    imagem_reforcada = target&amp;#10;else:&amp;#10;    imagem_reforcada = fractal_left if target == fractal_right else fractal_right&amp;#10;&amp;#10;# define qual tecla está associada à imagem reforçada&amp;#10;if imagem_reforcada == fractal_left:&amp;#10;    corr = &quot;left&quot;&amp;#10;else:&amp;#10;    corr = &quot;right&quot;&amp;#10;&amp;#10;# (opcional) define qual seria a resposta correta se o target fosse determinístico&amp;#10;if target == fractal_left:&amp;#10;    corr_target = &quot;left&quot;&amp;#10;else:&amp;#10;    corr_target = &quot;right&quot;&amp;#10;    &amp;#10;debug_info = (&amp;#10;    f&quot;Trial: {trials.thisN + 1}\n&quot;&amp;#10;    f&quot;Target image: {target}\n&quot;&amp;#10;    f&quot;Fractal left: {fractal_left}\n&quot;&amp;#10;    f&quot;Fractal right: {fractal_right}\n&quot;&amp;#10;    f&quot;Switch trial: {switches[trials.thisN]}\n&quot;&amp;#10;    f&quot;Reforço aplicado: {reforco_aplicado}\n&quot;&amp;#10;    f&quot;Imagem reforçada: {imagem_reforcada}\n&quot;&amp;#10;    f&quot;Correct response (reforço): {corr}\n&quot;&amp;#10;    f&quot;Correct response (target, ignorando reforço): {corr_target}\n&quot;&amp;#10;    f&quot;Pontos acumulados até agora: {score}&quot;&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="if key_resp.keys == &quot;left&quot;:&amp;#10;    x_pos = -0.5&amp;#10;    opa = 1&amp;#10;elif key_resp.keys == &quot;right&quot;:&amp;#10;    x_pos = 0.5&amp;#10;    opa = 1" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# reforco_aplicado = True se o participante deve receber ponto por acertar a imagem correta&amp;#10;reforco_aplicado = reforcos[trials.thisN]&amp;#10;&amp;#10;# Nenhuma resposta foi dada&amp;#10;if not key_resp.keys: &amp;#10;    score -= 1&amp;#10;    point_msg = &quot;–1&quot;&amp;#10;    ausencias_consecutivas += 1&amp;#10;    ausencias_totais += 1   &amp;#10;else:&amp;#10;    ausencias_consecutivas = 0  # zera a contagem se houve resposta&amp;#10;    &amp;#10;    if key_resp.corr:&amp;#10;        score += 1&amp;#10;        point_msg = &quot;+1&quot;&amp;#10;&amp;#10;    # Resposta incorreta&amp;#10;    else:&amp;#10;        score -= 1&amp;#10;        point_msg = &quot;–1&quot;&amp;#10;&amp;#10;&amp;#10;if score &gt; 0:&amp;#10;    cum_score_msg = f&quot;+{abs(score)}&quot;&amp;#10;elif score &lt; 0:&amp;#10;    cum_score_msg = f&quot;–{abs(score)}&quot;&amp;#10;else:&amp;#10;    cum_score_msg = &quot;0&quot;&amp;#10;&amp;#10;thisExp.addData(&quot;left_image&quot;, fractal_left)&amp;#10;thisExp.addData(&quot;right_image&quot;, fractal_right)&amp;#10;thisExp.addData(&quot;target_image&quot;, target)&amp;#10;thisExp.addData(&quot;switch_trial&quot;, switches[trials.thisN])&amp;#10;thisExp.addData(&quot;reinforcement&quot;, reforco_aplicado)&amp;#10;thisExp.addData(&quot;reinforced_image&quot;, imagem_reforcada)&amp;#10;thisExp.addData(&quot;corr_resp&quot;, corr)&amp;#10;thisExp.addData(&quot;deterministic_corr_resp&quot;, corr_target)&amp;#10;thisExp.addData(&quot;participant_resp&quot;, key_resp.keys)&amp;#10;thisExp.addData(&quot;feedback&quot;, point_msg)&amp;#10;thisExp.addData(&quot;score&quot;, score)&amp;#10;&amp;#10;# Verifica critérios de encerramento&amp;#10;if ausencias_consecutivas &gt;= 5 or ausencias_totais &gt;= 9:&amp;#10;    if ausencias_consecutivas &gt;= 5:&amp;#10;        motivo_fim = &quot;Encerrado por 5 ausências consecutivas&quot;&amp;#10;    else:&amp;#10;        motivo_fim = &quot;Encerrado por 9 ausências totais&quot;&amp;#10;&amp;#10;    # Log de encerramento&amp;#10;    thisExp.addData(&quot;motivo_encerramento&quot;, motivo_fim)&amp;#10;    thisExp.addData(&quot;ausencias_consecutivas&quot;, ausencias_consecutivas)&amp;#10;    thisExp.addData(&quot;ausencias_totais&quot;, ausencias_totais)&amp;#10;&amp;#10;    # (opcional) Mostra mensagem final ao participante&amp;#10;    trials.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixation" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.30" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="polygon" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="red" valType="color" updates="constant" name="lineColor"/>
        <Param val="6" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="polygon" valType="code" updates="None" name="name"/>
        <Param val="opa" valType="num" updates="set every frame" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(x_pos, 0)" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="None" name="shape"/>
        <Param val="(0.7, 0.7)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="stim_left" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$fractal_left" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stim_left" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.7, 0.7)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="stim_right" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$fractal_right" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="stim_right" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.5, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.7, 0.7)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'left', 'right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$corr" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.65)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$debug_info" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="instruction">
      <RoutineSettingsComponent name="instruction" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="instruction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="initial_instr_code" plugin="None">
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# lista de instruções&amp;#10;initial_instruction_list = [&quot;instructions\practice_instruction_01.jpg&quot;,&amp;#10;                            &quot;instructions\practice_instruction_02.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_03.jpg&quot;,&amp;#10;                            &quot;instructions\practice_instruction_04.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_05.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_06.jpg&quot;,&amp;#10;                            &quot;instructions\practice_instruction_07.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_08.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_09.jpg&quot;,&amp;#10;                            &quot;instructions\practice_instruction_10.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_11.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_12.jpg&quot;,&amp;#10;                            &quot;instructions\practice_instruction_13.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_18.jpg&quot;, &amp;#10;                            &quot;instructions\practice_instruction_19.jpg&quot;]&amp;#10;&amp;#10;current_index = 0&amp;#10;&amp;#10;# BEGIN EXPERIMENT&amp;#10;ausencias_consecutivas = 0&amp;#10;ausencias_totais = 0&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if instr_initial_resp.keys == &quot;left&quot;:&amp;#10;    current_index -= 1&amp;#10;elif instr_initial_resp.keys == &quot;right&quot;:&amp;#10;    current_index += 1&amp;#10;&amp;#10;# Se a instrução atual for -1&amp;#10;if current_index == -1:&amp;#10;    # Resete o valor para ser 0&amp;#10;    current_index = 0&amp;#10;# Se a instrução atual é igual ao comprimento da lista de instruções&amp;#10;elif current_index == len(initial_instruction_list):&amp;#10;    instructions.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="initial_instr_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="instr_initial_resp" plugin="None">
        <Param val="['left', 'right']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="instr_initial_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <ImageComponent name="initial_instruction_images" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$initial_instruction_list[current_index]" valType="str" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="initial_instruction_images" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(2, 2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="thanks">
      <RoutineSettingsComponent name="thanks" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="thanks" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="thanks_msg" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.12" valType="num" updates="constant" name="letterHeight"/>
        <Param val="thanks_msg" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Fim do experimento!&amp;#10;&amp;#10;Obrigado por sua participação!&amp;#10;&amp;#10;Pressione [BARRA DE ESPAÇO] para fechar a janela." valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="thanks_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="thanks_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="trial_feedback">
      <RoutineSettingsComponent name="trial_feedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="trial_feedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="point_feedback" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.3" valType="num" updates="constant" name="letterHeight"/>
        <Param val="point_feedback" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$point_msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="cumulative_score">
      <RoutineSettingsComponent name="cumulative_score" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="cumulative_score" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="cum_score_title" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.2" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cum_score_title" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.8)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Pontuação Acumulada" valType="str" updates="constant" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="cum_score" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Times New Roman" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.3" valType="num" updates="constant" name="letterHeight"/>
        <Param val="cum_score" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$cum_score_msg" valType="str" updates="set every repeat" name="text"/>
        <Param val="norm" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1.8" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="instructions">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="9999" valType="num"/>
      <Param name="name" updates="None" val="instructions" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instruction"/>
    <LoopTerminator name="instructions"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'image': 'DPT/Black_Female_LookLeft_Self1_Other1.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other2.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other3.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other1.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other2.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other3.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self0_Other0.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self1_Other1.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other2.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other3.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self0_Other0.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other1.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other2.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other3.tif', 'perspective': 'other', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other2.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other2.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self1_Other0.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other0.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other0.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other2.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other0.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other0.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other0.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other1.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other2.tif', 'perspective': 'other', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self1_Other1.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other2.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other3.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other1.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other2.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other3.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self0_Other0.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self1_Other1.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other2.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other3.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self0_Other0.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other1.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other2.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other3.tif', 'perspective': 'self', 'consistency': 'consistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self1_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other2.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other2.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'matching'}, {'image': 'DPT/Black_Female_LookLeft_Self1_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self2_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookLeft_Self3_Other2.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self1_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self2_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other0.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other1.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}, {'image': 'DPT/Black_Female_LookRight_Self3_Other2.tif', 'perspective': 'self', 'consistency': 'inconsistent', 'trial_type': 'mismatching'}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="150" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="trial_feedback"/>
    <Routine name="cumulative_score"/>
    <LoopTerminator name="trials"/>
    <Routine name="thanks"/>
  </Flow>
</PsychoPy2experiment>
